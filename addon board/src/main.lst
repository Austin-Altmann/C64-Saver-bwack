   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	init
  12               	init:
  13               	.LFB7:
  14               		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        ****  * SSD1306xLED - Library/Driver for the SSD1306 based OLED/PLED 128x64 displays
   3:main.c        ****  *
   4:main.c        ****  * @author Neven Boyanov
   5:main.c        ****  *
   6:main.c        ****  * This is part of the Tinusaur/SSD1306xLED project.
   7:main.c        ****  *
   8:main.c        ****  * Copyright (c) 2018 Neven Boyanov, The Tinusaur Team. All Rights Reserved.
   9:main.c        ****  * Distributed as open source software under MIT License, see LICENSE.txt file.
  10:main.c        ****  * Retain in your source code the link http://tinusaur.org to the Tinusaur project.
  11:main.c        ****  *
  12:main.c        ****  * Source code available at: https://bitbucket.org/tinusaur/ssd1306xled
  13:main.c        ****  *
  14:main.c        ****  */
  15:main.c        **** 
  16:main.c        **** // ============================================================================
  17:main.c        **** // NOTE: About F_CPU - it should be set in either (1) Makefile; or (2) in the IDE.
  18:main.c        **** #include <string.h>
  19:main.c        **** #include <stdint.h>
  20:main.c        **** #include <avr/io.h>
  21:main.c        **** #include <util/delay.h>
  22:main.c        **** 
  23:main.c        **** //#include "tinyavrlib/cpufreq.h"
  24:main.c        **** 
  25:main.c        **** #include "font8x16.h"
  26:main.c        **** #include "ssd1306xled.h"
  27:main.c        **** #include "usi_i2c_master.h"
  28:main.c        **** #include "num2str.h"
  29:main.c        **** 
  30:main.c        **** // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  31:main.c        **** //                 ATtiny85
  32:main.c        **** //               +----------+
  33:main.c        **** //       (RST)---+ PB5  Vcc +---(+)--VCC--
  34:main.c        **** // ---[OWOWOD]---+ PB3  PB2 +---[TWI/SCL]-
  35:main.c        **** // --------------+ PB4  PB1 +-------------
  36:main.c        **** // ---GND--(-)---+ GND  PB0 +---[TWI/SDA]-
  37:main.c        **** //               +----------+
  38:main.c        **** //              Tinusaur Board
  39:main.c        **** // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  40:main.c        **** 
  41:main.c        **** // ----------------------------------------------------------------------------
  42:main.c        **** 
  43:main.c        **** // -----(+)--------------->	// Vcc,	Pin 1 on SSD1306 Board
  44:main.c        **** // -----(-)--------------->	// GND,	Pin 2 on SSD1306 Board
  45:main.c        **** #define SSD1306_SCL		PB2	// SCL,	Pin 3 on SSD1306 Board
  46:main.c        **** #define SSD1306_SDA		PB0	// SDA,	Pin 4 on SSD1306 Board
  47:main.c        **** 
  48:main.c        **** #define SSD1306_SA		0x78	// Slave address
  49:main.c        **** 
  50:main.c        **** #define INA219_SA		0b1000000 // Slave address
  51:main.c        **** 
  52:main.c        **** // ----------------------------------------------------------------------------
  53:main.c        **** 
  54:main.c        **** #define STEPS_DELAY_SHORT 200
  55:main.c        **** #define STEPS_DELAY 600
  56:main.c        **** #define STEPS_DELAY_LONG 1000
  57:main.c        **** 
  58:main.c        **** void init(void) {
  15               		.loc 1 58 17 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  59:main.c        **** 	ssd1306xled_font8x16 = ssd1306xled_font8x16data;
  21               		.loc 1 59 2 view .LVU1
  22               		.loc 1 59 23 is_stmt 0 view .LVU2
  23 0000 80E0      		ldi r24,lo8(ssd1306xled_font8x16data)
  24 0002 90E0      		ldi r25,hi8(ssd1306xled_font8x16data)
  25 0004 9093 0000 		sts ssd1306xled_font8x16+1,r25
  26 0008 8093 0000 		sts ssd1306xled_font8x16,r24
  60:main.c        **** 
  61:main.c        **** 	_delay_ms(40);
  27               		.loc 1 61 2 is_stmt 1 view .LVU3
  28               	.LVL0:
  29               	.LBB4:
  30               	.LBI4:
  31               		.file 2 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** _delay_ms(double __ms)
  32               		.loc 2 166 1 view .LVU4
  33               	.LBB5:
 167:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	double __tmp ;
  34               		.loc 2 168 2 view .LVU5
 169:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
  35               		.loc 2 172 2 view .LVU6
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  36               		.loc 2 173 2 view .LVU7
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
  37               		.loc 2 174 2 view .LVU8
 175:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
  38               		.loc 2 184 3 view .LVU9
 185:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  39               		.loc 2 187 2 view .LVU10
  40 000c 2FEF      		ldi r18,lo8(63999)
  41 000e 89EF      		ldi r24,hi8(63999)
  42 0010 90E0      		ldi r25,hlo8(63999)
  43 0012 2150      	1:	subi r18,1
  44 0014 8040      		sbci r24,0
  45 0016 9040      		sbci r25,0
  46 0018 01F4      		brne 1b
  47 001a 00C0      		rjmp .
  48 001c 0000      		nop
  49               	.LVL1:
  50               		.loc 2 187 2 is_stmt 0 view .LVU11
  51               	.LBE5:
  52               	.LBE4:
  62:main.c        **** 	ssd1306_init();
  53               		.loc 1 62 2 is_stmt 1 view .LVU12
  54 001e 00D0      		rcall ssd1306_init
  55               	.LVL2:
  63:main.c        **** 	ssd1306_clear();
  56               		.loc 1 63 2 view .LVU13
  57 0020 80E0      		ldi r24,0
  58 0022 00D0      		rcall ssd1306_fill
  59               	.LVL3:
  60               		.loc 1 63 17 view .LVU14
  64:main.c        **** 
  65:main.c        **** 	//	_delay_ms(40);
  66:main.c        **** 	ina_init();
  61               		.loc 1 66 2 view .LVU15
  62 0024 00C0      		rjmp ina_init
  63               	.LVL4:
  64               		.cfi_endproc
  65               	.LFE7:
  67               		.section	.text.startup,"ax",@progbits
  68               	.global	main
  70               	main:
  71               	.LFB8:
  67:main.c        **** }
  68:main.c        **** 
  69:main.c        **** int main(void) {
  72               		.loc 1 69 16 view -0
  73               		.cfi_startproc
  74 0000 00D0      		rcall .
  75 0002 00D0      		rcall .
  76 0004 00D0      		rcall .
  77               	.LCFI0:
  78               		.cfi_def_cfa_offset 8
  79 0006 CDB7      		in r28,__SP_L__
  80 0008 DEB7      		in r29,__SP_H__
  81               	.LCFI1:
  82               		.cfi_def_cfa_register 28
  83               	/* prologue: function */
  84               	/* frame size = 6 */
  85               	/* stack size = 6 */
  86               	.L__stack_usage = 6
  70:main.c        **** 	int count = 0;
  87               		.loc 1 70 2 view .LVU17
  88               	.LVL5:
  71:main.c        **** 	char buf[1 + USINT2DECASCII_MAX_DIGITS];
  89               		.loc 1 71 2 view .LVU18
  72:main.c        **** 
  73:main.c        **** 	init();
  90               		.loc 1 73 2 view .LVU19
  91 000a 00D0      		rcall init
  92               	.LVL6:
  74:main.c        **** 	memset(buf, 0, 1 + USINT2DECASCII_MAX_DIGITS);
  93               		.loc 1 74 2 view .LVU20
  94 000c 8E01      		movw r16,r28
  95 000e 0F5F      		subi r16,-1
  96 0010 1F4F      		sbci r17,-1
  97 0012 86E0      		ldi r24,lo8(6)
  98 0014 F801      		movw r30,r16
  99               		0:
 100 0016 1192      		st Z+,__zero_reg__
 101 0018 8A95      		dec r24
 102 001a 01F4      		brne 0b
  70:main.c        **** 	char buf[1 + USINT2DECASCII_MAX_DIGITS];
 103               		.loc 1 70 6 is_stmt 0 view .LVU21
 104 001c F12C      		mov r15,__zero_reg__
 105 001e E12C      		mov r14,__zero_reg__
 106               	.LVL7:
 107               	.L3:
  75:main.c        **** 	while (1) {
 108               		.loc 1 75 2 is_stmt 1 discriminator 1 view .LVU22
  76:main.c        **** 		usint2decascii(count, buf);
 109               		.loc 1 76 3 discriminator 1 view .LVU23
 110 0020 B801      		movw r22,r16
 111 0022 C701      		movw r24,r14
 112 0024 00D0      		rcall usint2decascii
 113               	.LVL8:
  77:main.c        **** 		count += 256;
 114               		.loc 1 77 3 discriminator 1 view .LVU24
 115               		.loc 1 77 9 is_stmt 0 discriminator 1 view .LVU25
 116 0026 F394      		inc r15
 117               	.LVL9:
  78:main.c        **** 		ssd1306_string_font8x16xy(0, 0, buf);
 118               		.loc 1 78 3 is_stmt 1 discriminator 1 view .LVU26
 119 0028 A801      		movw r20,r16
 120 002a 60E0      		ldi r22,0
 121 002c 80E0      		ldi r24,0
 122 002e 00D0      		rcall ssd1306_string_font8x16xy
 123               	.LVL10:
  79:main.c        **** 		ssd1306_string_font8x16xy(0, 2, buf);
 124               		.loc 1 79 3 discriminator 1 view .LVU27
 125 0030 A801      		movw r20,r16
 126 0032 62E0      		ldi r22,lo8(2)
 127 0034 80E0      		ldi r24,0
 128 0036 00D0      		rcall ssd1306_string_font8x16xy
 129               	.LVL11:
 130 0038 00C0      		rjmp .L3
 131               		.cfi_endproc
 132               	.LFE8:
 134               	.global	ssd1306xled_font8x16data
 135               		.section	.progmem.data,"a",@progbits
 138               	ssd1306xled_font8x16data:
 139 0000 00        		.byte	0
 140 0001 00        		.byte	0
 141 0002 00        		.byte	0
 142 0003 00        		.byte	0
 143 0004 00        		.byte	0
 144 0005 00        		.byte	0
 145 0006 00        		.byte	0
 146 0007 00        		.byte	0
 147 0008 00        		.byte	0
 148 0009 00        		.byte	0
 149 000a 00        		.byte	0
 150 000b 00        		.byte	0
 151 000c 00        		.byte	0
 152 000d 00        		.byte	0
 153 000e 00        		.byte	0
 154 000f 00        		.byte	0
 155 0010 00        		.byte	0
 156 0011 00        		.byte	0
 157 0012 00        		.byte	0
 158 0013 F8        		.byte	-8
 159 0014 00        		.byte	0
 160 0015 00        		.byte	0
 161 0016 00        		.byte	0
 162 0017 00        		.byte	0
 163 0018 00        		.byte	0
 164 0019 00        		.byte	0
 165 001a 00        		.byte	0
 166 001b 33        		.byte	51
 167 001c 30        		.byte	48
 168 001d 00        		.byte	0
 169 001e 00        		.byte	0
 170 001f 00        		.byte	0
 171 0020 00        		.byte	0
 172 0021 10        		.byte	16
 173 0022 0C        		.byte	12
 174 0023 06        		.byte	6
 175 0024 10        		.byte	16
 176 0025 0C        		.byte	12
 177 0026 06        		.byte	6
 178 0027 00        		.byte	0
 179 0028 00        		.byte	0
 180 0029 00        		.byte	0
 181 002a 00        		.byte	0
 182 002b 00        		.byte	0
 183 002c 00        		.byte	0
 184 002d 00        		.byte	0
 185 002e 00        		.byte	0
 186 002f 00        		.byte	0
 187 0030 40        		.byte	64
 188 0031 C0        		.byte	-64
 189 0032 78        		.byte	120
 190 0033 40        		.byte	64
 191 0034 C0        		.byte	-64
 192 0035 78        		.byte	120
 193 0036 40        		.byte	64
 194 0037 00        		.byte	0
 195 0038 04        		.byte	4
 196 0039 3F        		.byte	63
 197 003a 04        		.byte	4
 198 003b 04        		.byte	4
 199 003c 3F        		.byte	63
 200 003d 04        		.byte	4
 201 003e 04        		.byte	4
 202 003f 00        		.byte	0
 203 0040 00        		.byte	0
 204 0041 70        		.byte	112
 205 0042 88        		.byte	-120
 206 0043 FC        		.byte	-4
 207 0044 08        		.byte	8
 208 0045 30        		.byte	48
 209 0046 00        		.byte	0
 210 0047 00        		.byte	0
 211 0048 00        		.byte	0
 212 0049 18        		.byte	24
 213 004a 20        		.byte	32
 214 004b FF        		.byte	-1
 215 004c 21        		.byte	33
 216 004d 1E        		.byte	30
 217 004e 00        		.byte	0
 218 004f 00        		.byte	0
 219 0050 F0        		.byte	-16
 220 0051 08        		.byte	8
 221 0052 F0        		.byte	-16
 222 0053 00        		.byte	0
 223 0054 E0        		.byte	-32
 224 0055 18        		.byte	24
 225 0056 00        		.byte	0
 226 0057 00        		.byte	0
 227 0058 00        		.byte	0
 228 0059 21        		.byte	33
 229 005a 1C        		.byte	28
 230 005b 03        		.byte	3
 231 005c 1E        		.byte	30
 232 005d 21        		.byte	33
 233 005e 1E        		.byte	30
 234 005f 00        		.byte	0
 235 0060 00        		.byte	0
 236 0061 F0        		.byte	-16
 237 0062 08        		.byte	8
 238 0063 88        		.byte	-120
 239 0064 70        		.byte	112
 240 0065 00        		.byte	0
 241 0066 00        		.byte	0
 242 0067 00        		.byte	0
 243 0068 1E        		.byte	30
 244 0069 21        		.byte	33
 245 006a 23        		.byte	35
 246 006b 24        		.byte	36
 247 006c 19        		.byte	25
 248 006d 27        		.byte	39
 249 006e 21        		.byte	33
 250 006f 10        		.byte	16
 251 0070 10        		.byte	16
 252 0071 16        		.byte	22
 253 0072 0E        		.byte	14
 254 0073 00        		.byte	0
 255 0074 00        		.byte	0
 256 0075 00        		.byte	0
 257 0076 00        		.byte	0
 258 0077 00        		.byte	0
 259 0078 00        		.byte	0
 260 0079 00        		.byte	0
 261 007a 00        		.byte	0
 262 007b 00        		.byte	0
 263 007c 00        		.byte	0
 264 007d 00        		.byte	0
 265 007e 00        		.byte	0
 266 007f 00        		.byte	0
 267 0080 00        		.byte	0
 268 0081 00        		.byte	0
 269 0082 00        		.byte	0
 270 0083 E0        		.byte	-32
 271 0084 18        		.byte	24
 272 0085 04        		.byte	4
 273 0086 02        		.byte	2
 274 0087 00        		.byte	0
 275 0088 00        		.byte	0
 276 0089 00        		.byte	0
 277 008a 00        		.byte	0
 278 008b 07        		.byte	7
 279 008c 18        		.byte	24
 280 008d 20        		.byte	32
 281 008e 40        		.byte	64
 282 008f 00        		.byte	0
 283 0090 00        		.byte	0
 284 0091 02        		.byte	2
 285 0092 04        		.byte	4
 286 0093 18        		.byte	24
 287 0094 E0        		.byte	-32
 288 0095 00        		.byte	0
 289 0096 00        		.byte	0
 290 0097 00        		.byte	0
 291 0098 00        		.byte	0
 292 0099 40        		.byte	64
 293 009a 20        		.byte	32
 294 009b 18        		.byte	24
 295 009c 07        		.byte	7
 296 009d 00        		.byte	0
 297 009e 00        		.byte	0
 298 009f 00        		.byte	0
 299 00a0 40        		.byte	64
 300 00a1 40        		.byte	64
 301 00a2 80        		.byte	-128
 302 00a3 F0        		.byte	-16
 303 00a4 80        		.byte	-128
 304 00a5 40        		.byte	64
 305 00a6 40        		.byte	64
 306 00a7 00        		.byte	0
 307 00a8 02        		.byte	2
 308 00a9 02        		.byte	2
 309 00aa 01        		.byte	1
 310 00ab 0F        		.byte	15
 311 00ac 01        		.byte	1
 312 00ad 02        		.byte	2
 313 00ae 02        		.byte	2
 314 00af 00        		.byte	0
 315 00b0 00        		.byte	0
 316 00b1 00        		.byte	0
 317 00b2 00        		.byte	0
 318 00b3 F0        		.byte	-16
 319 00b4 00        		.byte	0
 320 00b5 00        		.byte	0
 321 00b6 00        		.byte	0
 322 00b7 00        		.byte	0
 323 00b8 01        		.byte	1
 324 00b9 01        		.byte	1
 325 00ba 01        		.byte	1
 326 00bb 1F        		.byte	31
 327 00bc 01        		.byte	1
 328 00bd 01        		.byte	1
 329 00be 01        		.byte	1
 330 00bf 00        		.byte	0
 331 00c0 00        		.byte	0
 332 00c1 00        		.byte	0
 333 00c2 00        		.byte	0
 334 00c3 00        		.byte	0
 335 00c4 00        		.byte	0
 336 00c5 00        		.byte	0
 337 00c6 00        		.byte	0
 338 00c7 00        		.byte	0
 339 00c8 80        		.byte	-128
 340 00c9 B0        		.byte	-80
 341 00ca 70        		.byte	112
 342 00cb 00        		.byte	0
 343 00cc 00        		.byte	0
 344 00cd 00        		.byte	0
 345 00ce 00        		.byte	0
 346 00cf 00        		.byte	0
 347 00d0 00        		.byte	0
 348 00d1 00        		.byte	0
 349 00d2 00        		.byte	0
 350 00d3 00        		.byte	0
 351 00d4 00        		.byte	0
 352 00d5 00        		.byte	0
 353 00d6 00        		.byte	0
 354 00d7 00        		.byte	0
 355 00d8 00        		.byte	0
 356 00d9 01        		.byte	1
 357 00da 01        		.byte	1
 358 00db 01        		.byte	1
 359 00dc 01        		.byte	1
 360 00dd 01        		.byte	1
 361 00de 01        		.byte	1
 362 00df 01        		.byte	1
 363 00e0 00        		.byte	0
 364 00e1 00        		.byte	0
 365 00e2 00        		.byte	0
 366 00e3 00        		.byte	0
 367 00e4 00        		.byte	0
 368 00e5 00        		.byte	0
 369 00e6 00        		.byte	0
 370 00e7 00        		.byte	0
 371 00e8 00        		.byte	0
 372 00e9 30        		.byte	48
 373 00ea 30        		.byte	48
 374 00eb 00        		.byte	0
 375 00ec 00        		.byte	0
 376 00ed 00        		.byte	0
 377 00ee 00        		.byte	0
 378 00ef 00        		.byte	0
 379 00f0 00        		.byte	0
 380 00f1 00        		.byte	0
 381 00f2 00        		.byte	0
 382 00f3 00        		.byte	0
 383 00f4 80        		.byte	-128
 384 00f5 60        		.byte	96
 385 00f6 18        		.byte	24
 386 00f7 04        		.byte	4
 387 00f8 00        		.byte	0
 388 00f9 60        		.byte	96
 389 00fa 18        		.byte	24
 390 00fb 06        		.byte	6
 391 00fc 01        		.byte	1
 392 00fd 00        		.byte	0
 393 00fe 00        		.byte	0
 394 00ff 00        		.byte	0
 395 0100 00        		.byte	0
 396 0101 E0        		.byte	-32
 397 0102 10        		.byte	16
 398 0103 08        		.byte	8
 399 0104 08        		.byte	8
 400 0105 10        		.byte	16
 401 0106 E0        		.byte	-32
 402 0107 00        		.byte	0
 403 0108 00        		.byte	0
 404 0109 0F        		.byte	15
 405 010a 10        		.byte	16
 406 010b 20        		.byte	32
 407 010c 20        		.byte	32
 408 010d 10        		.byte	16
 409 010e 0F        		.byte	15
 410 010f 00        		.byte	0
 411 0110 00        		.byte	0
 412 0111 10        		.byte	16
 413 0112 10        		.byte	16
 414 0113 F8        		.byte	-8
 415 0114 00        		.byte	0
 416 0115 00        		.byte	0
 417 0116 00        		.byte	0
 418 0117 00        		.byte	0
 419 0118 00        		.byte	0
 420 0119 20        		.byte	32
 421 011a 20        		.byte	32
 422 011b 3F        		.byte	63
 423 011c 20        		.byte	32
 424 011d 20        		.byte	32
 425 011e 00        		.byte	0
 426 011f 00        		.byte	0
 427 0120 00        		.byte	0
 428 0121 70        		.byte	112
 429 0122 08        		.byte	8
 430 0123 08        		.byte	8
 431 0124 08        		.byte	8
 432 0125 88        		.byte	-120
 433 0126 70        		.byte	112
 434 0127 00        		.byte	0
 435 0128 00        		.byte	0
 436 0129 30        		.byte	48
 437 012a 28        		.byte	40
 438 012b 24        		.byte	36
 439 012c 22        		.byte	34
 440 012d 21        		.byte	33
 441 012e 30        		.byte	48
 442 012f 00        		.byte	0
 443 0130 00        		.byte	0
 444 0131 30        		.byte	48
 445 0132 08        		.byte	8
 446 0133 88        		.byte	-120
 447 0134 88        		.byte	-120
 448 0135 48        		.byte	72
 449 0136 30        		.byte	48
 450 0137 00        		.byte	0
 451 0138 00        		.byte	0
 452 0139 18        		.byte	24
 453 013a 20        		.byte	32
 454 013b 20        		.byte	32
 455 013c 20        		.byte	32
 456 013d 11        		.byte	17
 457 013e 0E        		.byte	14
 458 013f 00        		.byte	0
 459 0140 00        		.byte	0
 460 0141 00        		.byte	0
 461 0142 C0        		.byte	-64
 462 0143 20        		.byte	32
 463 0144 10        		.byte	16
 464 0145 F8        		.byte	-8
 465 0146 00        		.byte	0
 466 0147 00        		.byte	0
 467 0148 00        		.byte	0
 468 0149 07        		.byte	7
 469 014a 04        		.byte	4
 470 014b 24        		.byte	36
 471 014c 24        		.byte	36
 472 014d 3F        		.byte	63
 473 014e 24        		.byte	36
 474 014f 00        		.byte	0
 475 0150 00        		.byte	0
 476 0151 F8        		.byte	-8
 477 0152 08        		.byte	8
 478 0153 88        		.byte	-120
 479 0154 88        		.byte	-120
 480 0155 08        		.byte	8
 481 0156 08        		.byte	8
 482 0157 00        		.byte	0
 483 0158 00        		.byte	0
 484 0159 19        		.byte	25
 485 015a 21        		.byte	33
 486 015b 20        		.byte	32
 487 015c 20        		.byte	32
 488 015d 11        		.byte	17
 489 015e 0E        		.byte	14
 490 015f 00        		.byte	0
 491 0160 00        		.byte	0
 492 0161 E0        		.byte	-32
 493 0162 10        		.byte	16
 494 0163 88        		.byte	-120
 495 0164 88        		.byte	-120
 496 0165 18        		.byte	24
 497 0166 00        		.byte	0
 498 0167 00        		.byte	0
 499 0168 00        		.byte	0
 500 0169 0F        		.byte	15
 501 016a 11        		.byte	17
 502 016b 20        		.byte	32
 503 016c 20        		.byte	32
 504 016d 11        		.byte	17
 505 016e 0E        		.byte	14
 506 016f 00        		.byte	0
 507 0170 00        		.byte	0
 508 0171 38        		.byte	56
 509 0172 08        		.byte	8
 510 0173 08        		.byte	8
 511 0174 C8        		.byte	-56
 512 0175 38        		.byte	56
 513 0176 08        		.byte	8
 514 0177 00        		.byte	0
 515 0178 00        		.byte	0
 516 0179 00        		.byte	0
 517 017a 00        		.byte	0
 518 017b 3F        		.byte	63
 519 017c 00        		.byte	0
 520 017d 00        		.byte	0
 521 017e 00        		.byte	0
 522 017f 00        		.byte	0
 523 0180 00        		.byte	0
 524 0181 70        		.byte	112
 525 0182 88        		.byte	-120
 526 0183 08        		.byte	8
 527 0184 08        		.byte	8
 528 0185 88        		.byte	-120
 529 0186 70        		.byte	112
 530 0187 00        		.byte	0
 531 0188 00        		.byte	0
 532 0189 1C        		.byte	28
 533 018a 22        		.byte	34
 534 018b 21        		.byte	33
 535 018c 21        		.byte	33
 536 018d 22        		.byte	34
 537 018e 1C        		.byte	28
 538 018f 00        		.byte	0
 539 0190 00        		.byte	0
 540 0191 E0        		.byte	-32
 541 0192 10        		.byte	16
 542 0193 08        		.byte	8
 543 0194 08        		.byte	8
 544 0195 10        		.byte	16
 545 0196 E0        		.byte	-32
 546 0197 00        		.byte	0
 547 0198 00        		.byte	0
 548 0199 00        		.byte	0
 549 019a 31        		.byte	49
 550 019b 22        		.byte	34
 551 019c 22        		.byte	34
 552 019d 11        		.byte	17
 553 019e 0F        		.byte	15
 554 019f 00        		.byte	0
 555 01a0 00        		.byte	0
 556 01a1 00        		.byte	0
 557 01a2 00        		.byte	0
 558 01a3 C0        		.byte	-64
 559 01a4 C0        		.byte	-64
 560 01a5 00        		.byte	0
 561 01a6 00        		.byte	0
 562 01a7 00        		.byte	0
 563 01a8 00        		.byte	0
 564 01a9 00        		.byte	0
 565 01aa 00        		.byte	0
 566 01ab 30        		.byte	48
 567 01ac 30        		.byte	48
 568 01ad 00        		.byte	0
 569 01ae 00        		.byte	0
 570 01af 00        		.byte	0
 571 01b0 00        		.byte	0
 572 01b1 00        		.byte	0
 573 01b2 00        		.byte	0
 574 01b3 80        		.byte	-128
 575 01b4 00        		.byte	0
 576 01b5 00        		.byte	0
 577 01b6 00        		.byte	0
 578 01b7 00        		.byte	0
 579 01b8 00        		.byte	0
 580 01b9 00        		.byte	0
 581 01ba 80        		.byte	-128
 582 01bb 60        		.byte	96
 583 01bc 00        		.byte	0
 584 01bd 00        		.byte	0
 585 01be 00        		.byte	0
 586 01bf 00        		.byte	0
 587 01c0 00        		.byte	0
 588 01c1 00        		.byte	0
 589 01c2 80        		.byte	-128
 590 01c3 40        		.byte	64
 591 01c4 20        		.byte	32
 592 01c5 10        		.byte	16
 593 01c6 08        		.byte	8
 594 01c7 00        		.byte	0
 595 01c8 00        		.byte	0
 596 01c9 01        		.byte	1
 597 01ca 02        		.byte	2
 598 01cb 04        		.byte	4
 599 01cc 08        		.byte	8
 600 01cd 10        		.byte	16
 601 01ce 20        		.byte	32
 602 01cf 00        		.byte	0
 603 01d0 40        		.byte	64
 604 01d1 40        		.byte	64
 605 01d2 40        		.byte	64
 606 01d3 40        		.byte	64
 607 01d4 40        		.byte	64
 608 01d5 40        		.byte	64
 609 01d6 40        		.byte	64
 610 01d7 00        		.byte	0
 611 01d8 04        		.byte	4
 612 01d9 04        		.byte	4
 613 01da 04        		.byte	4
 614 01db 04        		.byte	4
 615 01dc 04        		.byte	4
 616 01dd 04        		.byte	4
 617 01de 04        		.byte	4
 618 01df 00        		.byte	0
 619 01e0 00        		.byte	0
 620 01e1 08        		.byte	8
 621 01e2 10        		.byte	16
 622 01e3 20        		.byte	32
 623 01e4 40        		.byte	64
 624 01e5 80        		.byte	-128
 625 01e6 00        		.byte	0
 626 01e7 00        		.byte	0
 627 01e8 00        		.byte	0
 628 01e9 20        		.byte	32
 629 01ea 10        		.byte	16
 630 01eb 08        		.byte	8
 631 01ec 04        		.byte	4
 632 01ed 02        		.byte	2
 633 01ee 01        		.byte	1
 634 01ef 00        		.byte	0
 635 01f0 00        		.byte	0
 636 01f1 70        		.byte	112
 637 01f2 48        		.byte	72
 638 01f3 08        		.byte	8
 639 01f4 08        		.byte	8
 640 01f5 08        		.byte	8
 641 01f6 F0        		.byte	-16
 642 01f7 00        		.byte	0
 643 01f8 00        		.byte	0
 644 01f9 00        		.byte	0
 645 01fa 00        		.byte	0
 646 01fb 30        		.byte	48
 647 01fc 36        		.byte	54
 648 01fd 01        		.byte	1
 649 01fe 00        		.byte	0
 650 01ff 00        		.byte	0
 651 0200 C0        		.byte	-64
 652 0201 30        		.byte	48
 653 0202 C8        		.byte	-56
 654 0203 28        		.byte	40
 655 0204 E8        		.byte	-24
 656 0205 10        		.byte	16
 657 0206 E0        		.byte	-32
 658 0207 00        		.byte	0
 659 0208 07        		.byte	7
 660 0209 18        		.byte	24
 661 020a 27        		.byte	39
 662 020b 24        		.byte	36
 663 020c 23        		.byte	35
 664 020d 14        		.byte	20
 665 020e 0B        		.byte	11
 666 020f 00        		.byte	0
 667 0210 00        		.byte	0
 668 0211 00        		.byte	0
 669 0212 C0        		.byte	-64
 670 0213 38        		.byte	56
 671 0214 E0        		.byte	-32
 672 0215 00        		.byte	0
 673 0216 00        		.byte	0
 674 0217 00        		.byte	0
 675 0218 20        		.byte	32
 676 0219 3C        		.byte	60
 677 021a 23        		.byte	35
 678 021b 02        		.byte	2
 679 021c 02        		.byte	2
 680 021d 27        		.byte	39
 681 021e 38        		.byte	56
 682 021f 20        		.byte	32
 683 0220 08        		.byte	8
 684 0221 F8        		.byte	-8
 685 0222 88        		.byte	-120
 686 0223 88        		.byte	-120
 687 0224 88        		.byte	-120
 688 0225 70        		.byte	112
 689 0226 00        		.byte	0
 690 0227 00        		.byte	0
 691 0228 20        		.byte	32
 692 0229 3F        		.byte	63
 693 022a 20        		.byte	32
 694 022b 20        		.byte	32
 695 022c 20        		.byte	32
 696 022d 11        		.byte	17
 697 022e 0E        		.byte	14
 698 022f 00        		.byte	0
 699 0230 C0        		.byte	-64
 700 0231 30        		.byte	48
 701 0232 08        		.byte	8
 702 0233 08        		.byte	8
 703 0234 08        		.byte	8
 704 0235 08        		.byte	8
 705 0236 38        		.byte	56
 706 0237 00        		.byte	0
 707 0238 07        		.byte	7
 708 0239 18        		.byte	24
 709 023a 20        		.byte	32
 710 023b 20        		.byte	32
 711 023c 20        		.byte	32
 712 023d 10        		.byte	16
 713 023e 08        		.byte	8
 714 023f 00        		.byte	0
 715 0240 08        		.byte	8
 716 0241 F8        		.byte	-8
 717 0242 08        		.byte	8
 718 0243 08        		.byte	8
 719 0244 08        		.byte	8
 720 0245 10        		.byte	16
 721 0246 E0        		.byte	-32
 722 0247 00        		.byte	0
 723 0248 20        		.byte	32
 724 0249 3F        		.byte	63
 725 024a 20        		.byte	32
 726 024b 20        		.byte	32
 727 024c 20        		.byte	32
 728 024d 10        		.byte	16
 729 024e 0F        		.byte	15
 730 024f 00        		.byte	0
 731 0250 08        		.byte	8
 732 0251 F8        		.byte	-8
 733 0252 88        		.byte	-120
 734 0253 88        		.byte	-120
 735 0254 E8        		.byte	-24
 736 0255 08        		.byte	8
 737 0256 10        		.byte	16
 738 0257 00        		.byte	0
 739 0258 20        		.byte	32
 740 0259 3F        		.byte	63
 741 025a 20        		.byte	32
 742 025b 20        		.byte	32
 743 025c 23        		.byte	35
 744 025d 20        		.byte	32
 745 025e 18        		.byte	24
 746 025f 00        		.byte	0
 747 0260 08        		.byte	8
 748 0261 F8        		.byte	-8
 749 0262 88        		.byte	-120
 750 0263 88        		.byte	-120
 751 0264 E8        		.byte	-24
 752 0265 08        		.byte	8
 753 0266 10        		.byte	16
 754 0267 00        		.byte	0
 755 0268 20        		.byte	32
 756 0269 3F        		.byte	63
 757 026a 20        		.byte	32
 758 026b 00        		.byte	0
 759 026c 03        		.byte	3
 760 026d 00        		.byte	0
 761 026e 00        		.byte	0
 762 026f 00        		.byte	0
 763 0270 C0        		.byte	-64
 764 0271 30        		.byte	48
 765 0272 08        		.byte	8
 766 0273 08        		.byte	8
 767 0274 08        		.byte	8
 768 0275 38        		.byte	56
 769 0276 00        		.byte	0
 770 0277 00        		.byte	0
 771 0278 07        		.byte	7
 772 0279 18        		.byte	24
 773 027a 20        		.byte	32
 774 027b 20        		.byte	32
 775 027c 22        		.byte	34
 776 027d 1E        		.byte	30
 777 027e 02        		.byte	2
 778 027f 00        		.byte	0
 779 0280 08        		.byte	8
 780 0281 F8        		.byte	-8
 781 0282 08        		.byte	8
 782 0283 00        		.byte	0
 783 0284 00        		.byte	0
 784 0285 08        		.byte	8
 785 0286 F8        		.byte	-8
 786 0287 08        		.byte	8
 787 0288 20        		.byte	32
 788 0289 3F        		.byte	63
 789 028a 21        		.byte	33
 790 028b 01        		.byte	1
 791 028c 01        		.byte	1
 792 028d 21        		.byte	33
 793 028e 3F        		.byte	63
 794 028f 20        		.byte	32
 795 0290 00        		.byte	0
 796 0291 08        		.byte	8
 797 0292 08        		.byte	8
 798 0293 F8        		.byte	-8
 799 0294 08        		.byte	8
 800 0295 08        		.byte	8
 801 0296 00        		.byte	0
 802 0297 00        		.byte	0
 803 0298 00        		.byte	0
 804 0299 20        		.byte	32
 805 029a 20        		.byte	32
 806 029b 3F        		.byte	63
 807 029c 20        		.byte	32
 808 029d 20        		.byte	32
 809 029e 00        		.byte	0
 810 029f 00        		.byte	0
 811 02a0 00        		.byte	0
 812 02a1 00        		.byte	0
 813 02a2 08        		.byte	8
 814 02a3 08        		.byte	8
 815 02a4 F8        		.byte	-8
 816 02a5 08        		.byte	8
 817 02a6 08        		.byte	8
 818 02a7 00        		.byte	0
 819 02a8 C0        		.byte	-64
 820 02a9 80        		.byte	-128
 821 02aa 80        		.byte	-128
 822 02ab 80        		.byte	-128
 823 02ac 7F        		.byte	127
 824 02ad 00        		.byte	0
 825 02ae 00        		.byte	0
 826 02af 00        		.byte	0
 827 02b0 08        		.byte	8
 828 02b1 F8        		.byte	-8
 829 02b2 88        		.byte	-120
 830 02b3 C0        		.byte	-64
 831 02b4 28        		.byte	40
 832 02b5 18        		.byte	24
 833 02b6 08        		.byte	8
 834 02b7 00        		.byte	0
 835 02b8 20        		.byte	32
 836 02b9 3F        		.byte	63
 837 02ba 20        		.byte	32
 838 02bb 01        		.byte	1
 839 02bc 26        		.byte	38
 840 02bd 38        		.byte	56
 841 02be 20        		.byte	32
 842 02bf 00        		.byte	0
 843 02c0 08        		.byte	8
 844 02c1 F8        		.byte	-8
 845 02c2 08        		.byte	8
 846 02c3 00        		.byte	0
 847 02c4 00        		.byte	0
 848 02c5 00        		.byte	0
 849 02c6 00        		.byte	0
 850 02c7 00        		.byte	0
 851 02c8 20        		.byte	32
 852 02c9 3F        		.byte	63
 853 02ca 20        		.byte	32
 854 02cb 20        		.byte	32
 855 02cc 20        		.byte	32
 856 02cd 20        		.byte	32
 857 02ce 30        		.byte	48
 858 02cf 00        		.byte	0
 859 02d0 08        		.byte	8
 860 02d1 F8        		.byte	-8
 861 02d2 F8        		.byte	-8
 862 02d3 00        		.byte	0
 863 02d4 F8        		.byte	-8
 864 02d5 F8        		.byte	-8
 865 02d6 08        		.byte	8
 866 02d7 00        		.byte	0
 867 02d8 20        		.byte	32
 868 02d9 3F        		.byte	63
 869 02da 00        		.byte	0
 870 02db 3F        		.byte	63
 871 02dc 00        		.byte	0
 872 02dd 3F        		.byte	63
 873 02de 20        		.byte	32
 874 02df 00        		.byte	0
 875 02e0 08        		.byte	8
 876 02e1 F8        		.byte	-8
 877 02e2 30        		.byte	48
 878 02e3 C0        		.byte	-64
 879 02e4 00        		.byte	0
 880 02e5 08        		.byte	8
 881 02e6 F8        		.byte	-8
 882 02e7 08        		.byte	8
 883 02e8 20        		.byte	32
 884 02e9 3F        		.byte	63
 885 02ea 20        		.byte	32
 886 02eb 00        		.byte	0
 887 02ec 07        		.byte	7
 888 02ed 18        		.byte	24
 889 02ee 3F        		.byte	63
 890 02ef 00        		.byte	0
 891 02f0 E0        		.byte	-32
 892 02f1 10        		.byte	16
 893 02f2 08        		.byte	8
 894 02f3 08        		.byte	8
 895 02f4 08        		.byte	8
 896 02f5 10        		.byte	16
 897 02f6 E0        		.byte	-32
 898 02f7 00        		.byte	0
 899 02f8 0F        		.byte	15
 900 02f9 10        		.byte	16
 901 02fa 20        		.byte	32
 902 02fb 20        		.byte	32
 903 02fc 20        		.byte	32
 904 02fd 10        		.byte	16
 905 02fe 0F        		.byte	15
 906 02ff 00        		.byte	0
 907 0300 08        		.byte	8
 908 0301 F8        		.byte	-8
 909 0302 08        		.byte	8
 910 0303 08        		.byte	8
 911 0304 08        		.byte	8
 912 0305 08        		.byte	8
 913 0306 F0        		.byte	-16
 914 0307 00        		.byte	0
 915 0308 20        		.byte	32
 916 0309 3F        		.byte	63
 917 030a 21        		.byte	33
 918 030b 01        		.byte	1
 919 030c 01        		.byte	1
 920 030d 01        		.byte	1
 921 030e 00        		.byte	0
 922 030f 00        		.byte	0
 923 0310 E0        		.byte	-32
 924 0311 10        		.byte	16
 925 0312 08        		.byte	8
 926 0313 08        		.byte	8
 927 0314 08        		.byte	8
 928 0315 10        		.byte	16
 929 0316 E0        		.byte	-32
 930 0317 00        		.byte	0
 931 0318 0F        		.byte	15
 932 0319 18        		.byte	24
 933 031a 24        		.byte	36
 934 031b 24        		.byte	36
 935 031c 38        		.byte	56
 936 031d 50        		.byte	80
 937 031e 4F        		.byte	79
 938 031f 00        		.byte	0
 939 0320 08        		.byte	8
 940 0321 F8        		.byte	-8
 941 0322 88        		.byte	-120
 942 0323 88        		.byte	-120
 943 0324 88        		.byte	-120
 944 0325 88        		.byte	-120
 945 0326 70        		.byte	112
 946 0327 00        		.byte	0
 947 0328 20        		.byte	32
 948 0329 3F        		.byte	63
 949 032a 20        		.byte	32
 950 032b 00        		.byte	0
 951 032c 03        		.byte	3
 952 032d 0C        		.byte	12
 953 032e 30        		.byte	48
 954 032f 20        		.byte	32
 955 0330 00        		.byte	0
 956 0331 70        		.byte	112
 957 0332 88        		.byte	-120
 958 0333 08        		.byte	8
 959 0334 08        		.byte	8
 960 0335 08        		.byte	8
 961 0336 38        		.byte	56
 962 0337 00        		.byte	0
 963 0338 00        		.byte	0
 964 0339 38        		.byte	56
 965 033a 20        		.byte	32
 966 033b 21        		.byte	33
 967 033c 21        		.byte	33
 968 033d 22        		.byte	34
 969 033e 1C        		.byte	28
 970 033f 00        		.byte	0
 971 0340 18        		.byte	24
 972 0341 08        		.byte	8
 973 0342 08        		.byte	8
 974 0343 F8        		.byte	-8
 975 0344 08        		.byte	8
 976 0345 08        		.byte	8
 977 0346 18        		.byte	24
 978 0347 00        		.byte	0
 979 0348 00        		.byte	0
 980 0349 00        		.byte	0
 981 034a 20        		.byte	32
 982 034b 3F        		.byte	63
 983 034c 20        		.byte	32
 984 034d 00        		.byte	0
 985 034e 00        		.byte	0
 986 034f 00        		.byte	0
 987 0350 08        		.byte	8
 988 0351 F8        		.byte	-8
 989 0352 08        		.byte	8
 990 0353 00        		.byte	0
 991 0354 00        		.byte	0
 992 0355 08        		.byte	8
 993 0356 F8        		.byte	-8
 994 0357 08        		.byte	8
 995 0358 00        		.byte	0
 996 0359 1F        		.byte	31
 997 035a 20        		.byte	32
 998 035b 20        		.byte	32
 999 035c 20        		.byte	32
 1000 035d 20        		.byte	32
 1001 035e 1F        		.byte	31
 1002 035f 00        		.byte	0
 1003 0360 08        		.byte	8
 1004 0361 78        		.byte	120
 1005 0362 88        		.byte	-120
 1006 0363 00        		.byte	0
 1007 0364 00        		.byte	0
 1008 0365 C8        		.byte	-56
 1009 0366 38        		.byte	56
 1010 0367 08        		.byte	8
 1011 0368 00        		.byte	0
 1012 0369 00        		.byte	0
 1013 036a 07        		.byte	7
 1014 036b 38        		.byte	56
 1015 036c 0E        		.byte	14
 1016 036d 01        		.byte	1
 1017 036e 00        		.byte	0
 1018 036f 00        		.byte	0
 1019 0370 F8        		.byte	-8
 1020 0371 08        		.byte	8
 1021 0372 00        		.byte	0
 1022 0373 F8        		.byte	-8
 1023 0374 00        		.byte	0
 1024 0375 08        		.byte	8
 1025 0376 F8        		.byte	-8
 1026 0377 00        		.byte	0
 1027 0378 03        		.byte	3
 1028 0379 3C        		.byte	60
 1029 037a 07        		.byte	7
 1030 037b 00        		.byte	0
 1031 037c 07        		.byte	7
 1032 037d 3C        		.byte	60
 1033 037e 03        		.byte	3
 1034 037f 00        		.byte	0
 1035 0380 08        		.byte	8
 1036 0381 18        		.byte	24
 1037 0382 68        		.byte	104
 1038 0383 80        		.byte	-128
 1039 0384 80        		.byte	-128
 1040 0385 68        		.byte	104
 1041 0386 18        		.byte	24
 1042 0387 08        		.byte	8
 1043 0388 20        		.byte	32
 1044 0389 30        		.byte	48
 1045 038a 2C        		.byte	44
 1046 038b 03        		.byte	3
 1047 038c 03        		.byte	3
 1048 038d 2C        		.byte	44
 1049 038e 30        		.byte	48
 1050 038f 20        		.byte	32
 1051 0390 08        		.byte	8
 1052 0391 38        		.byte	56
 1053 0392 C8        		.byte	-56
 1054 0393 00        		.byte	0
 1055 0394 C8        		.byte	-56
 1056 0395 38        		.byte	56
 1057 0396 08        		.byte	8
 1058 0397 00        		.byte	0
 1059 0398 00        		.byte	0
 1060 0399 00        		.byte	0
 1061 039a 20        		.byte	32
 1062 039b 3F        		.byte	63
 1063 039c 20        		.byte	32
 1064 039d 00        		.byte	0
 1065 039e 00        		.byte	0
 1066 039f 00        		.byte	0
 1067 03a0 10        		.byte	16
 1068 03a1 08        		.byte	8
 1069 03a2 08        		.byte	8
 1070 03a3 08        		.byte	8
 1071 03a4 C8        		.byte	-56
 1072 03a5 38        		.byte	56
 1073 03a6 08        		.byte	8
 1074 03a7 00        		.byte	0
 1075 03a8 20        		.byte	32
 1076 03a9 38        		.byte	56
 1077 03aa 26        		.byte	38
 1078 03ab 21        		.byte	33
 1079 03ac 20        		.byte	32
 1080 03ad 20        		.byte	32
 1081 03ae 18        		.byte	24
 1082 03af 00        		.byte	0
 1083 03b0 00        		.byte	0
 1084 03b1 00        		.byte	0
 1085 03b2 00        		.byte	0
 1086 03b3 FE        		.byte	-2
 1087 03b4 02        		.byte	2
 1088 03b5 02        		.byte	2
 1089 03b6 02        		.byte	2
 1090 03b7 00        		.byte	0
 1091 03b8 00        		.byte	0
 1092 03b9 00        		.byte	0
 1093 03ba 00        		.byte	0
 1094 03bb 7F        		.byte	127
 1095 03bc 40        		.byte	64
 1096 03bd 40        		.byte	64
 1097 03be 40        		.byte	64
 1098 03bf 00        		.byte	0
 1099 03c0 00        		.byte	0
 1100 03c1 0C        		.byte	12
 1101 03c2 30        		.byte	48
 1102 03c3 C0        		.byte	-64
 1103 03c4 00        		.byte	0
 1104 03c5 00        		.byte	0
 1105 03c6 00        		.byte	0
 1106 03c7 00        		.byte	0
 1107 03c8 00        		.byte	0
 1108 03c9 00        		.byte	0
 1109 03ca 00        		.byte	0
 1110 03cb 01        		.byte	1
 1111 03cc 06        		.byte	6
 1112 03cd 38        		.byte	56
 1113 03ce C0        		.byte	-64
 1114 03cf 00        		.byte	0
 1115 03d0 00        		.byte	0
 1116 03d1 02        		.byte	2
 1117 03d2 02        		.byte	2
 1118 03d3 02        		.byte	2
 1119 03d4 FE        		.byte	-2
 1120 03d5 00        		.byte	0
 1121 03d6 00        		.byte	0
 1122 03d7 00        		.byte	0
 1123 03d8 00        		.byte	0
 1124 03d9 40        		.byte	64
 1125 03da 40        		.byte	64
 1126 03db 40        		.byte	64
 1127 03dc 7F        		.byte	127
 1128 03dd 00        		.byte	0
 1129 03de 00        		.byte	0
 1130 03df 00        		.byte	0
 1131 03e0 00        		.byte	0
 1132 03e1 00        		.byte	0
 1133 03e2 04        		.byte	4
 1134 03e3 02        		.byte	2
 1135 03e4 02        		.byte	2
 1136 03e5 02        		.byte	2
 1137 03e6 04        		.byte	4
 1138 03e7 00        		.byte	0
 1139 03e8 00        		.byte	0
 1140 03e9 00        		.byte	0
 1141 03ea 00        		.byte	0
 1142 03eb 00        		.byte	0
 1143 03ec 00        		.byte	0
 1144 03ed 00        		.byte	0
 1145 03ee 00        		.byte	0
 1146 03ef 00        		.byte	0
 1147 03f0 00        		.byte	0
 1148 03f1 00        		.byte	0
 1149 03f2 00        		.byte	0
 1150 03f3 00        		.byte	0
 1151 03f4 00        		.byte	0
 1152 03f5 00        		.byte	0
 1153 03f6 00        		.byte	0
 1154 03f7 00        		.byte	0
 1155 03f8 80        		.byte	-128
 1156 03f9 80        		.byte	-128
 1157 03fa 80        		.byte	-128
 1158 03fb 80        		.byte	-128
 1159 03fc 80        		.byte	-128
 1160 03fd 80        		.byte	-128
 1161 03fe 80        		.byte	-128
 1162 03ff 80        		.byte	-128
 1163 0400 00        		.byte	0
 1164 0401 02        		.byte	2
 1165 0402 02        		.byte	2
 1166 0403 04        		.byte	4
 1167 0404 00        		.byte	0
 1168 0405 00        		.byte	0
 1169 0406 00        		.byte	0
 1170 0407 00        		.byte	0
 1171 0408 00        		.byte	0
 1172 0409 00        		.byte	0
 1173 040a 00        		.byte	0
 1174 040b 00        		.byte	0
 1175 040c 00        		.byte	0
 1176 040d 00        		.byte	0
 1177 040e 00        		.byte	0
 1178 040f 00        		.byte	0
 1179 0410 00        		.byte	0
 1180 0411 00        		.byte	0
 1181 0412 80        		.byte	-128
 1182 0413 80        		.byte	-128
 1183 0414 80        		.byte	-128
 1184 0415 80        		.byte	-128
 1185 0416 00        		.byte	0
 1186 0417 00        		.byte	0
 1187 0418 00        		.byte	0
 1188 0419 19        		.byte	25
 1189 041a 24        		.byte	36
 1190 041b 22        		.byte	34
 1191 041c 22        		.byte	34
 1192 041d 22        		.byte	34
 1193 041e 3F        		.byte	63
 1194 041f 20        		.byte	32
 1195 0420 08        		.byte	8
 1196 0421 F8        		.byte	-8
 1197 0422 00        		.byte	0
 1198 0423 80        		.byte	-128
 1199 0424 80        		.byte	-128
 1200 0425 00        		.byte	0
 1201 0426 00        		.byte	0
 1202 0427 00        		.byte	0
 1203 0428 00        		.byte	0
 1204 0429 3F        		.byte	63
 1205 042a 11        		.byte	17
 1206 042b 20        		.byte	32
 1207 042c 20        		.byte	32
 1208 042d 11        		.byte	17
 1209 042e 0E        		.byte	14
 1210 042f 00        		.byte	0
 1211 0430 00        		.byte	0
 1212 0431 00        		.byte	0
 1213 0432 00        		.byte	0
 1214 0433 80        		.byte	-128
 1215 0434 80        		.byte	-128
 1216 0435 80        		.byte	-128
 1217 0436 00        		.byte	0
 1218 0437 00        		.byte	0
 1219 0438 00        		.byte	0
 1220 0439 0E        		.byte	14
 1221 043a 11        		.byte	17
 1222 043b 20        		.byte	32
 1223 043c 20        		.byte	32
 1224 043d 20        		.byte	32
 1225 043e 11        		.byte	17
 1226 043f 00        		.byte	0
 1227 0440 00        		.byte	0
 1228 0441 00        		.byte	0
 1229 0442 00        		.byte	0
 1230 0443 80        		.byte	-128
 1231 0444 80        		.byte	-128
 1232 0445 88        		.byte	-120
 1233 0446 F8        		.byte	-8
 1234 0447 00        		.byte	0
 1235 0448 00        		.byte	0
 1236 0449 0E        		.byte	14
 1237 044a 11        		.byte	17
 1238 044b 20        		.byte	32
 1239 044c 20        		.byte	32
 1240 044d 10        		.byte	16
 1241 044e 3F        		.byte	63
 1242 044f 20        		.byte	32
 1243 0450 00        		.byte	0
 1244 0451 00        		.byte	0
 1245 0452 80        		.byte	-128
 1246 0453 80        		.byte	-128
 1247 0454 80        		.byte	-128
 1248 0455 80        		.byte	-128
 1249 0456 00        		.byte	0
 1250 0457 00        		.byte	0
 1251 0458 00        		.byte	0
 1252 0459 1F        		.byte	31
 1253 045a 22        		.byte	34
 1254 045b 22        		.byte	34
 1255 045c 22        		.byte	34
 1256 045d 22        		.byte	34
 1257 045e 13        		.byte	19
 1258 045f 00        		.byte	0
 1259 0460 00        		.byte	0
 1260 0461 80        		.byte	-128
 1261 0462 80        		.byte	-128
 1262 0463 F0        		.byte	-16
 1263 0464 88        		.byte	-120
 1264 0465 88        		.byte	-120
 1265 0466 88        		.byte	-120
 1266 0467 18        		.byte	24
 1267 0468 00        		.byte	0
 1268 0469 20        		.byte	32
 1269 046a 20        		.byte	32
 1270 046b 3F        		.byte	63
 1271 046c 20        		.byte	32
 1272 046d 20        		.byte	32
 1273 046e 00        		.byte	0
 1274 046f 00        		.byte	0
 1275 0470 00        		.byte	0
 1276 0471 00        		.byte	0
 1277 0472 80        		.byte	-128
 1278 0473 80        		.byte	-128
 1279 0474 80        		.byte	-128
 1280 0475 80        		.byte	-128
 1281 0476 80        		.byte	-128
 1282 0477 00        		.byte	0
 1283 0478 00        		.byte	0
 1284 0479 6B        		.byte	107
 1285 047a 94        		.byte	-108
 1286 047b 94        		.byte	-108
 1287 047c 94        		.byte	-108
 1288 047d 93        		.byte	-109
 1289 047e 60        		.byte	96
 1290 047f 00        		.byte	0
 1291 0480 08        		.byte	8
 1292 0481 F8        		.byte	-8
 1293 0482 00        		.byte	0
 1294 0483 80        		.byte	-128
 1295 0484 80        		.byte	-128
 1296 0485 80        		.byte	-128
 1297 0486 00        		.byte	0
 1298 0487 00        		.byte	0
 1299 0488 20        		.byte	32
 1300 0489 3F        		.byte	63
 1301 048a 21        		.byte	33
 1302 048b 00        		.byte	0
 1303 048c 00        		.byte	0
 1304 048d 20        		.byte	32
 1305 048e 3F        		.byte	63
 1306 048f 20        		.byte	32
 1307 0490 00        		.byte	0
 1308 0491 80        		.byte	-128
 1309 0492 98        		.byte	-104
 1310 0493 98        		.byte	-104
 1311 0494 00        		.byte	0
 1312 0495 00        		.byte	0
 1313 0496 00        		.byte	0
 1314 0497 00        		.byte	0
 1315 0498 00        		.byte	0
 1316 0499 20        		.byte	32
 1317 049a 20        		.byte	32
 1318 049b 3F        		.byte	63
 1319 049c 20        		.byte	32
 1320 049d 20        		.byte	32
 1321 049e 00        		.byte	0
 1322 049f 00        		.byte	0
 1323 04a0 00        		.byte	0
 1324 04a1 00        		.byte	0
 1325 04a2 00        		.byte	0
 1326 04a3 80        		.byte	-128
 1327 04a4 98        		.byte	-104
 1328 04a5 98        		.byte	-104
 1329 04a6 00        		.byte	0
 1330 04a7 00        		.byte	0
 1331 04a8 00        		.byte	0
 1332 04a9 C0        		.byte	-64
 1333 04aa 80        		.byte	-128
 1334 04ab 80        		.byte	-128
 1335 04ac 80        		.byte	-128
 1336 04ad 7F        		.byte	127
 1337 04ae 00        		.byte	0
 1338 04af 00        		.byte	0
 1339 04b0 08        		.byte	8
 1340 04b1 F8        		.byte	-8
 1341 04b2 00        		.byte	0
 1342 04b3 00        		.byte	0
 1343 04b4 80        		.byte	-128
 1344 04b5 80        		.byte	-128
 1345 04b6 80        		.byte	-128
 1346 04b7 00        		.byte	0
 1347 04b8 20        		.byte	32
 1348 04b9 3F        		.byte	63
 1349 04ba 24        		.byte	36
 1350 04bb 02        		.byte	2
 1351 04bc 2D        		.byte	45
 1352 04bd 30        		.byte	48
 1353 04be 20        		.byte	32
 1354 04bf 00        		.byte	0
 1355 04c0 00        		.byte	0
 1356 04c1 08        		.byte	8
 1357 04c2 08        		.byte	8
 1358 04c3 F8        		.byte	-8
 1359 04c4 00        		.byte	0
 1360 04c5 00        		.byte	0
 1361 04c6 00        		.byte	0
 1362 04c7 00        		.byte	0
 1363 04c8 00        		.byte	0
 1364 04c9 20        		.byte	32
 1365 04ca 20        		.byte	32
 1366 04cb 3F        		.byte	63
 1367 04cc 20        		.byte	32
 1368 04cd 20        		.byte	32
 1369 04ce 00        		.byte	0
 1370 04cf 00        		.byte	0
 1371 04d0 80        		.byte	-128
 1372 04d1 80        		.byte	-128
 1373 04d2 80        		.byte	-128
 1374 04d3 80        		.byte	-128
 1375 04d4 80        		.byte	-128
 1376 04d5 80        		.byte	-128
 1377 04d6 80        		.byte	-128
 1378 04d7 00        		.byte	0
 1379 04d8 20        		.byte	32
 1380 04d9 3F        		.byte	63
 1381 04da 20        		.byte	32
 1382 04db 00        		.byte	0
 1383 04dc 3F        		.byte	63
 1384 04dd 20        		.byte	32
 1385 04de 00        		.byte	0
 1386 04df 3F        		.byte	63
 1387 04e0 80        		.byte	-128
 1388 04e1 80        		.byte	-128
 1389 04e2 00        		.byte	0
 1390 04e3 80        		.byte	-128
 1391 04e4 80        		.byte	-128
 1392 04e5 80        		.byte	-128
 1393 04e6 00        		.byte	0
 1394 04e7 00        		.byte	0
 1395 04e8 20        		.byte	32
 1396 04e9 3F        		.byte	63
 1397 04ea 21        		.byte	33
 1398 04eb 00        		.byte	0
 1399 04ec 00        		.byte	0
 1400 04ed 20        		.byte	32
 1401 04ee 3F        		.byte	63
 1402 04ef 20        		.byte	32
 1403 04f0 00        		.byte	0
 1404 04f1 00        		.byte	0
 1405 04f2 80        		.byte	-128
 1406 04f3 80        		.byte	-128
 1407 04f4 80        		.byte	-128
 1408 04f5 80        		.byte	-128
 1409 04f6 00        		.byte	0
 1410 04f7 00        		.byte	0
 1411 04f8 00        		.byte	0
 1412 04f9 1F        		.byte	31
 1413 04fa 20        		.byte	32
 1414 04fb 20        		.byte	32
 1415 04fc 20        		.byte	32
 1416 04fd 20        		.byte	32
 1417 04fe 1F        		.byte	31
 1418 04ff 00        		.byte	0
 1419 0500 80        		.byte	-128
 1420 0501 80        		.byte	-128
 1421 0502 00        		.byte	0
 1422 0503 80        		.byte	-128
 1423 0504 80        		.byte	-128
 1424 0505 00        		.byte	0
 1425 0506 00        		.byte	0
 1426 0507 00        		.byte	0
 1427 0508 80        		.byte	-128
 1428 0509 FF        		.byte	-1
 1429 050a A1        		.byte	-95
 1430 050b 20        		.byte	32
 1431 050c 20        		.byte	32
 1432 050d 11        		.byte	17
 1433 050e 0E        		.byte	14
 1434 050f 00        		.byte	0
 1435 0510 00        		.byte	0
 1436 0511 00        		.byte	0
 1437 0512 00        		.byte	0
 1438 0513 80        		.byte	-128
 1439 0514 80        		.byte	-128
 1440 0515 80        		.byte	-128
 1441 0516 80        		.byte	-128
 1442 0517 00        		.byte	0
 1443 0518 00        		.byte	0
 1444 0519 0E        		.byte	14
 1445 051a 11        		.byte	17
 1446 051b 20        		.byte	32
 1447 051c 20        		.byte	32
 1448 051d A0        		.byte	-96
 1449 051e FF        		.byte	-1
 1450 051f 80        		.byte	-128
 1451 0520 80        		.byte	-128
 1452 0521 80        		.byte	-128
 1453 0522 80        		.byte	-128
 1454 0523 00        		.byte	0
 1455 0524 80        		.byte	-128
 1456 0525 80        		.byte	-128
 1457 0526 80        		.byte	-128
 1458 0527 00        		.byte	0
 1459 0528 20        		.byte	32
 1460 0529 20        		.byte	32
 1461 052a 3F        		.byte	63
 1462 052b 21        		.byte	33
 1463 052c 20        		.byte	32
 1464 052d 00        		.byte	0
 1465 052e 01        		.byte	1
 1466 052f 00        		.byte	0
 1467 0530 00        		.byte	0
 1468 0531 00        		.byte	0
 1469 0532 80        		.byte	-128
 1470 0533 80        		.byte	-128
 1471 0534 80        		.byte	-128
 1472 0535 80        		.byte	-128
 1473 0536 80        		.byte	-128
 1474 0537 00        		.byte	0
 1475 0538 00        		.byte	0
 1476 0539 33        		.byte	51
 1477 053a 24        		.byte	36
 1478 053b 24        		.byte	36
 1479 053c 24        		.byte	36
 1480 053d 24        		.byte	36
 1481 053e 19        		.byte	25
 1482 053f 00        		.byte	0
 1483 0540 00        		.byte	0
 1484 0541 80        		.byte	-128
 1485 0542 80        		.byte	-128
 1486 0543 E0        		.byte	-32
 1487 0544 80        		.byte	-128
 1488 0545 80        		.byte	-128
 1489 0546 00        		.byte	0
 1490 0547 00        		.byte	0
 1491 0548 00        		.byte	0
 1492 0549 00        		.byte	0
 1493 054a 00        		.byte	0
 1494 054b 1F        		.byte	31
 1495 054c 20        		.byte	32
 1496 054d 20        		.byte	32
 1497 054e 00        		.byte	0
 1498 054f 00        		.byte	0
 1499 0550 80        		.byte	-128
 1500 0551 80        		.byte	-128
 1501 0552 00        		.byte	0
 1502 0553 00        		.byte	0
 1503 0554 00        		.byte	0
 1504 0555 80        		.byte	-128
 1505 0556 80        		.byte	-128
 1506 0557 00        		.byte	0
 1507 0558 00        		.byte	0
 1508 0559 1F        		.byte	31
 1509 055a 20        		.byte	32
 1510 055b 20        		.byte	32
 1511 055c 20        		.byte	32
 1512 055d 10        		.byte	16
 1513 055e 3F        		.byte	63
 1514 055f 20        		.byte	32
 1515 0560 80        		.byte	-128
 1516 0561 80        		.byte	-128
 1517 0562 80        		.byte	-128
 1518 0563 00        		.byte	0
 1519 0564 00        		.byte	0
 1520 0565 80        		.byte	-128
 1521 0566 80        		.byte	-128
 1522 0567 80        		.byte	-128
 1523 0568 00        		.byte	0
 1524 0569 01        		.byte	1
 1525 056a 0E        		.byte	14
 1526 056b 30        		.byte	48
 1527 056c 08        		.byte	8
 1528 056d 06        		.byte	6
 1529 056e 01        		.byte	1
 1530 056f 00        		.byte	0
 1531 0570 80        		.byte	-128
 1532 0571 80        		.byte	-128
 1533 0572 00        		.byte	0
 1534 0573 80        		.byte	-128
 1535 0574 00        		.byte	0
 1536 0575 80        		.byte	-128
 1537 0576 80        		.byte	-128
 1538 0577 80        		.byte	-128
 1539 0578 0F        		.byte	15
 1540 0579 30        		.byte	48
 1541 057a 0C        		.byte	12
 1542 057b 03        		.byte	3
 1543 057c 0C        		.byte	12
 1544 057d 30        		.byte	48
 1545 057e 0F        		.byte	15
 1546 057f 00        		.byte	0
 1547 0580 00        		.byte	0
 1548 0581 80        		.byte	-128
 1549 0582 80        		.byte	-128
 1550 0583 00        		.byte	0
 1551 0584 80        		.byte	-128
 1552 0585 80        		.byte	-128
 1553 0586 80        		.byte	-128
 1554 0587 00        		.byte	0
 1555 0588 00        		.byte	0
 1556 0589 20        		.byte	32
 1557 058a 31        		.byte	49
 1558 058b 2E        		.byte	46
 1559 058c 0E        		.byte	14
 1560 058d 31        		.byte	49
 1561 058e 20        		.byte	32
 1562 058f 00        		.byte	0
 1563 0590 80        		.byte	-128
 1564 0591 80        		.byte	-128
 1565 0592 80        		.byte	-128
 1566 0593 00        		.byte	0
 1567 0594 00        		.byte	0
 1568 0595 80        		.byte	-128
 1569 0596 80        		.byte	-128
 1570 0597 80        		.byte	-128
 1571 0598 80        		.byte	-128
 1572 0599 81        		.byte	-127
 1573 059a 8E        		.byte	-114
 1574 059b 70        		.byte	112
 1575 059c 18        		.byte	24
 1576 059d 06        		.byte	6
 1577 059e 01        		.byte	1
 1578 059f 00        		.byte	0
 1579 05a0 00        		.byte	0
 1580 05a1 80        		.byte	-128
 1581 05a2 80        		.byte	-128
 1582 05a3 80        		.byte	-128
 1583 05a4 80        		.byte	-128
 1584 05a5 80        		.byte	-128
 1585 05a6 80        		.byte	-128
 1586 05a7 00        		.byte	0
 1587 05a8 00        		.byte	0
 1588 05a9 21        		.byte	33
 1589 05aa 30        		.byte	48
 1590 05ab 2C        		.byte	44
 1591 05ac 22        		.byte	34
 1592 05ad 21        		.byte	33
 1593 05ae 30        		.byte	48
 1594 05af 00        		.byte	0
 1595 05b0 00        		.byte	0
 1596 05b1 00        		.byte	0
 1597 05b2 00        		.byte	0
 1598 05b3 00        		.byte	0
 1599 05b4 80        		.byte	-128
 1600 05b5 7C        		.byte	124
 1601 05b6 02        		.byte	2
 1602 05b7 02        		.byte	2
 1603 05b8 00        		.byte	0
 1604 05b9 00        		.byte	0
 1605 05ba 00        		.byte	0
 1606 05bb 00        		.byte	0
 1607 05bc 00        		.byte	0
 1608 05bd 3F        		.byte	63
 1609 05be 40        		.byte	64
 1610 05bf 40        		.byte	64
 1611 05c0 00        		.byte	0
 1612 05c1 00        		.byte	0
 1613 05c2 00        		.byte	0
 1614 05c3 00        		.byte	0
 1615 05c4 FF        		.byte	-1
 1616 05c5 00        		.byte	0
 1617 05c6 00        		.byte	0
 1618 05c7 00        		.byte	0
 1619 05c8 00        		.byte	0
 1620 05c9 00        		.byte	0
 1621 05ca 00        		.byte	0
 1622 05cb 00        		.byte	0
 1623 05cc FF        		.byte	-1
 1624 05cd 00        		.byte	0
 1625 05ce 00        		.byte	0
 1626 05cf 00        		.byte	0
 1627 05d0 00        		.byte	0
 1628 05d1 02        		.byte	2
 1629 05d2 02        		.byte	2
 1630 05d3 7C        		.byte	124
 1631 05d4 80        		.byte	-128
 1632 05d5 00        		.byte	0
 1633 05d6 00        		.byte	0
 1634 05d7 00        		.byte	0
 1635 05d8 00        		.byte	0
 1636 05d9 40        		.byte	64
 1637 05da 40        		.byte	64
 1638 05db 3F        		.byte	63
 1639 05dc 00        		.byte	0
 1640 05dd 00        		.byte	0
 1641 05de 00        		.byte	0
 1642 05df 00        		.byte	0
 1643 05e0 00        		.byte	0
 1644 05e1 06        		.byte	6
 1645 05e2 01        		.byte	1
 1646 05e3 01        		.byte	1
 1647 05e4 02        		.byte	2
 1648 05e5 02        		.byte	2
 1649 05e6 04        		.byte	4
 1650 05e7 04        		.byte	4
 1651 05e8 00        		.byte	0
 1652 05e9 00        		.byte	0
 1653 05ea 00        		.byte	0
 1654 05eb 00        		.byte	0
 1655 05ec 00        		.byte	0
 1656 05ed 00        		.byte	0
 1657 05ee 00        		.byte	0
 1658 05ef 00        		.byte	0
 1659               		.text
 1660               	.Letext0:
 1661               		.file 3 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 1662               		.file 4 "libs/tinusaur-ssd1306xled/ssd1306xled/font8x16.h"
 1663               		.file 5 "libs/tinusaur-ssd1306xled/ssd1306xled/ssd1306xled.h"
 1664               		.file 6 "libs/tinusaur-ssd1306xled/ssd1306xled/num2str.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:4      *ABS*:000000000000003f __SREG__
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:12     .text:0000000000000000 init
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:138    .progmem.data:0000000000000000 ssd1306xled_font8x16data
/var/folders/45/tzpftmj514z0qw2f80bnt2ym0000gn/T//ccEcuXIw.s:70     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
ssd1306xled_font8x16
ssd1306_init
ssd1306_fill
ina_init
usint2decascii
ssd1306_string_font8x16xy
